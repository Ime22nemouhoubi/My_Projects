OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {
  /* This fix the default STACKSIZE of tasks */
  TASK {
    UINT32 STACKSIZE = 800 ;
  };
  /* This fix the default STACKSIZE of ISRs */
  ISR {
    UINT32 STACKSIZE = 500 ;
  } ;
};


CPU blink {
  OS config {
    STATUS = EXTENDED;
    
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../../../../";	
      APP_SRC = "board/iutNantes/src/adc.c";
      APP_SRC = "board/iutNantes/src/oled.c";
      APP_SRC = "board/iutNantes/src/serial.c";
      APP_SRC = "board/iutNantes/src/dac.c";
      APP_SRC = "board/iutNantes/src/redirectPrintf.c";
      APP_SRC = "board/iutNantes/src/timer.c";
      CFLAGS  = "-I board/iutNantes/include"; 
      APP_SRC = "pfeMouhoubi.c";
      APP_NAME = "pfeMouhoubi_exe";
      CFLAGS  = "-O3 -std=c99"; 
      COMPILER = "arm-none-eabi-gcc";
      ASSEMBLER = "arm-none-eabi-as";
      LINKER = "arm-none-eabi-ld";
      COPIER = "arm-none-eabi-objcopy";
      SYSTEM = PYTHON;
    };
    
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };
  
  APPMODE std {};
 


  TASK measureTask {
    PRIORITY = 2;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM activatePeriodic {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = measureTask;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 100;
      CYCLETIME = 100;
    };
  };
  
  TASK timeoutTask {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM activateTimeout {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = timeoutTask;
    };
    AUTOSTART = FALSE;
  };

  TASK displayTask {
    PRIORITY = 2;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM activateDisplay {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = displayTask;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 100;
      CYCLETIME = 100;
    };
  };
TASK Measure_Task {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM activateMot {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = Measure_Task;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 100;
      CYCLETIME = 100;
    };
  };
TASK DataCompression {
    PRIORITY = 4;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM activateMot {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = DataCompression;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 100;
      CYCLETIME = 100;
    };
  };
  ISR triggerISR {
    CATEGORY = 2;
    PRIORITY = 3;
    STACKSIZE = 256;
    SOURCE = EIC_IRQ {
      PIN = PB15 {
        TRIGGER = BOTH;
        PULL = NONE;
        FILTERING = FALSE;
      };
    };
  };
 TASK Serial_Print {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM serialTrans {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = Serial_Print;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 1000;
      CYCLETIME = 1000;
    };
  };
 TASK Http_TransmissionTask {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  ALARM httpTrans {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = Http_TransmissionTask;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 1000;
      CYCLETIME = 1000;
    };
  }; 
};

